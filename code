!pip install kagglehub opencv-python pillow numpy matplotlib --quiet


import kagglehub
import os, cv2, numpy as np
from PIL import Image, ImageOps
import matplotlib.pyplot as plt


path = kagglehub.dataset_download("nagendra048/aadhar-dataset")
print("âœ… Dataset downloaded successfully!")
print("ðŸ“‚ Path to dataset files:", path)

def load_image(path):
    return cv2.imread(path)

def to_rgb(img):
    if img is None: return None
    if len(img.shape)==2:
        return cv2.cvtColor(img, cv2.COLOR_GRAY2BGR)
    return img

def deskew(img):
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    gray = cv2.bitwise_not(gray)
    coords = np.column_stack(np.where(gray > 0))
    if coords.shape[0] < 10:
        return img
    angle = cv2.minAreaRect(coords)[-1]
    if angle < -45:
        angle = -(90 + angle)
    else:
        angle = -angle
    (h, w) = img.shape[:2]
    center = (w//2, h//2)
    M = cv2.getRotationMatrix2D(center, angle, 1.0)
    rotated = cv2.warpAffine(img, M, (w, h), flags=cv2.INTER_LINEAR, borderMode=cv2.BORDER_REPLICATE)
    return rotated

def contrast_stretch(img):
    pil = Image.fromarray(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
    pil = ImageOps.autocontrast(pil, cutoff=1)
    return cv2.cvtColor(np.array(pil), cv2.COLOR_RGB2BGR)

def preprocess_file(in_path, out_path, max_dim=1400):
    img = load_image(in_path)
    img = to_rgb(img)
    img = deskew(img)
    img = contrast_stretch(img)
    h, w = img.shape[:2]
    scale = max_dim / max(h, w)
    if scale < 1.0:
        img = cv2.resize(img, (int(w*scale), int(h*scale)), interpolation=cv2.INTER_AREA)
    cv2.imwrite(out_path, img, [int(cv2.IMWRITE_JPEG_QUALITY), 92])


input_dir = path
output_dir = "/content/processed_aadhar"
os.makedirs(output_dir, exist_ok=True)

count = 0
for root, _, files in os.walk(input_dir):
    for file in files:
        if file.lower().endswith((".jpg", ".jpeg", ".png")):
            in_path = os.path.join(root, file)
            out_path = os.path.join(output_dir, file)
            preprocess_file(in_path, out_path)
            count += 1

print(f"âœ… Preprocessing complete! {count} images saved to '{output_dir}'")

import random
sample_img = random.choice(os.listdir(output_dir))
img = cv2.imread(os.path.join(output_dir, sample_img))
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
plt.title("Sample Preprocessed Aadhaar Image")
plt.axis("off")
plt.show()
